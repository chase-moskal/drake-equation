"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var preact_1 = require("preact");
var mobx_preact_1 = require("mobx-preact");
var mobx_1 = require("mobx");
var cart_button_1 = require("./cart-button");
var cart_panel_1 = require("./panel/cart-panel");
var make_default_cart_text_1 = require("./make-default-cart-text");
var make_default_scroll_tracker_1 = require("./make-default-scroll-tracker");
/**
 * Cart system component class
 * - is a section element
 * - takes as props a cart object, checkout machine, scroll tracker, etc
 * - contains CartButton and CartPanel components, mediates their relationship
 * - handles cart button click event to toggle cart panel open or closed
 * - handles cart system scroll tracking
 * - ultimately performs the checkout, using the cart panel checkout callback
 *   and checkout machine as tools
 * - takes a cart text object and distributes the text labels to child
 *   components
 */
var CartSystem = /** @class */ (function (_super) {
    __extends(CartSystem, _super);
    function CartSystem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.disposers = [];
        _this.scrollTracker = _this.props.scrollTracker
            || make_default_scroll_tracker_1.makeDefaultScrollTracker();
        _this.cartText = _this.props.cartText
            || make_default_cart_text_1.makeDefaultCartText();
        /**
         * Perform checkout function
         * - call the checkout machine to obtain checkout url
         * - open the checkout url in a new window or same window
         */
        _this.performCheckout = function () { return __awaiter(_this, void 0, void 0, function () {
            var _a, cart, checkoutMachine, checkoutInNewWindow, checkoutLocation, checkoutUrl;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.props, cart = _a.cart, checkoutMachine = _a.checkoutMachine, checkoutInNewWindow = _a.checkoutInNewWindow;
                        checkoutLocation = checkoutInNewWindow
                            ? window.open("", "_blank").location
                            : window.location;
                        return [4 /*yield*/, checkoutMachine.checkout(cart.activeItems)];
                    case 1:
                        checkoutUrl = _b.sent();
                        cart.clear();
                        cart.togglePanelOpen(false);
                        checkoutLocation.href = checkoutUrl;
                        return [2 /*return*/, checkoutUrl];
                }
            });
        }); };
        /**
         * Handle cart button click
         * - toggle the cart panel open or closed
         */
        _this.handleCartButtonClick = function () { return _this.props.cart.togglePanelOpen(); };
        return _this;
    }
    /**
     * Mount
     */
    CartSystem.prototype.componentWillMount = function () {
        var cart = this.props.cart;
        var _a = this, scrollTracker = _a.scrollTracker, disposers = _a.disposers;
        // reaction when the cart panel opens or closes, to set scroll tracking
        disposers.push(mobx_1.reaction(function () { return cart.panelOpen; }, function (panelOpen) {
            scrollTracker.setTracking(!panelOpen);
        }));
        // set scroll tracker initial state
        scrollTracker.setTracking(!cart.panelOpen);
        // mount the scroll tracker
        scrollTracker.mount();
    };
    /**
     * Unmount
     */
    CartSystem.prototype.componentWillUnmount = function () {
        var _a = this, scrollTracker = _a.scrollTracker, disposers = _a.disposers;
        // shutdown scroll tracker
        scrollTracker.unmount();
        // dispose all disposers
        for (var _i = 0, disposers_1 = disposers; _i < disposers_1.length; _i++) {
            var dispose = disposers_1[_i];
            dispose();
        }
        this.disposers = [];
    };
    /**
     * Render
     * - section element with scroll tracking
     * - contains cart button and cart panel
     */
    CartSystem.prototype.render = function () {
        var _a = this, performCheckout = _a.performCheckout, onClick = _a.handleCartButtonClick, cartText = _a.cartText, scrollTracker = _a.scrollTracker;
        var cart = this.props.cart;
        var cartButtonText = cartText.cartButtonText, cartPanelText = cartText.cartPanelText;
        return (preact_1.h("section", { className: "cart-system", "data-panel-open": cart.panelOpen ? "true" : "false", "data-items-in-cart": cart.activeItems.length, style: { top: scrollTracker.scroll } },
            preact_1.h(cart_button_1.CartButton, __assign({}, { cart: cart, onClick: onClick, cartButtonText: cartButtonText })),
            preact_1.h(cart_panel_1.CartPanel, __assign({}, { cart: cart, performCheckout: performCheckout, cartPanelText: cartPanelText }))));
    };
    CartSystem = __decorate([
        mobx_preact_1.observer
    ], CartSystem);
    return CartSystem;
}(preact_1.Component));
exports.CartSystem = CartSystem;
//# sourceMappingURL=cart-system.js.map