"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var preact_1 = require("preact");
var preact = require("preact");
var shopify_1 = require("../shopify");
var components_1 = require("../components");
var stores_1 = require("../stores");
/**
 * Ecommerce shopify collection options
 * - load products from shopify
 * - install a fully featured cart system and ecommerce experience
 * - place products into specific dom elements
 */
function ecommerceShopifyStore(options) {
    return __awaiter(this, void 0, void 0, function () {
        var currencyControl, shopifyAdapter, collectionsWithPromisedProducts, collections, products, cart, _i, collections_1, _a, collectionId, productsArea, products_1;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    currencyControl = new stores_1.CurrencyControl(options.currency);
                    shopifyAdapter = new shopify_1.ShopifyAdapter({
                        settings: options.shopify,
                        currencyControl: currencyControl
                    });
                    collectionsWithPromisedProducts = options.collections.map(function (details) { return (__assign({}, details, { products: shopifyAdapter.getProductsInCollection(details.collectionId) })); });
                    return [4 /*yield*/, Promise.all(collectionsWithPromisedProducts.map(function (details) { return details.products.then(function (products) { return (__assign({}, details, { products: products })); }); }))
                        // make catalog of products by combining all products into one array
                    ];
                case 1:
                    collections = _b.sent();
                    products = [].concat.apply([], collections.map(function (_a) {
                        var products = _a.products;
                        return products;
                    }));
                    cart = new stores_1.Cart({
                        omniStorage: options.omniStorage,
                        currencyControl: currencyControl,
                        itemCatalog: products.map(function (product) {
                            // run product evaluator
                            var _a = options.evaluator(product), quantityMin = _a.quantityMin, quantityMax = _a.quantityMax, precision = _a.precision, attributes = _a.attributes;
                            // set product properties
                            product.setPrecision(precision);
                            product.setAttributes(attributes);
                            // create the cart item
                            return new stores_1.CartItem({
                                product: product,
                                currencyControl: currencyControl,
                                quantityMin: quantityMin,
                                quantityMax: quantityMax
                            });
                        })
                    });
                    //
                    // render collection product areas
                    //
                    for (_i = 0, collections_1 = collections; _i < collections_1.length; _i++) {
                        _a = collections_1[_i], collectionId = _a.collectionId, productsArea = _a.productsArea, products_1 = _a.products;
                        preact.render(preact_1.h("div", { className: "product-list", "data-collection-id": collectionId }, products_1.map(function (product) {
                            return preact_1.h(components_1.ProductDisplay, __assign({}, { cart: cart, product: product }));
                        })), productsArea);
                    }
                    //
                    // render the cart system
                    //
                    preact.render(preact_1.h(components_1.CartSystem, __assign({}, __assign({}, options.cartSystem, { cart: cart, checkoutMachine: shopifyAdapter.checkoutMachine }))), options.cartArea);
                    return [2 /*return*/];
            }
        });
    });
}
exports.ecommerceShopifyStore = ecommerceShopifyStore;
//# sourceMappingURL=shopify-store.js.map